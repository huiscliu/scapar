
AC_PREREQ(2.59)

AC_INIT()
m4_ifdef([AC_DISABLE_OPTION_CHECKING], [AC_DISABLE_OPTION_CHECKING()], [])

dnl This MUST precede any other macro
AC_CONFIG_AUX_DIR([utils])

AC_CONFIG_HEADER([include/scapar-config.h])
AC_CONFIG_FILES([Makefile Makefile.inc])
SCAPAR_DIR="`pwd`"

AC_MSG_NOTICE(============================== compilers ===========================)

#--------------------------------------- config files and compilers
# Checks for programs.
AC_PROG_CC(gcc clang icc)
AC_PROG_CPP

if test "$GCC" = "yes"; then
    if $CC -V 2>&1 | grep -q Intel; then
        CFLAGS="$CFLAGS -Wall"
    elif $CC -v 2>&1 | grep -q clang; then
        CFLAGS="$CFLAGS -Wall -Wextra -Warray-bounds -Wunused -Wdangling -Wdeprecated"
    elif $CC -v 2>&1 | grep -q gcc; then
        CFLAGS="$CFLAGS -Wall -Wextra"

        for d in -Wmissing-declarations -Wmissing-prototypes -Wimplicit-function-declaration        \
            -Wunused -Wuninitialized -Wvla -Wformat -Wformat-security -Wmain -Wsequence-point       \
            -Wshadow -Wbad-function-cast -Wcomments -Wdeclaration-after-statement                   \
            -Waddress -Wpointer-sign -Wempty-body -Wnested-externs -Wold-style-declaration          \
            -Wold-style-definition -Wmissing-field-initializers -Wmaybe-uninitialized               \
            -Wno-return-local-addr -Wreturn-type -Wsequence-point -Wundef -Wunknown-pragmas         \
            -Wunused-label; do
            AC_MSG_CHECKING([whether $CC supports $d ])
            AC_LANG(C)
            CFLAGS_bak="$CFLAGS"
            CFLAGS="$CFLAGS $d"
            AC_COMPILE_IFELSE([AC_LANG_SOURCE([main(){}])], tmp=yes, tmp=no)
            if test $tmp = yes; then
                AC_MSG_RESULT(yes)
            else
                AC_MSG_RESULT(no)
                CFLAGS="$CFLAGS_bak"
            fi
        done
    fi

fi

LIBS="-L/usr/local/lib $LIBS -lm"

dnl Change relative path in compilers to full path
AC_FULLPATH(CC)
AC_FULLPATH(CPP)

# The default linker
AC_SUBST(LINKER, "$LINKER")

AC_PREFIX_DEFAULT(/usr/local/scapar)

AC_CHECK_PROGS(AR,[ar], no)
if test $AR = "no" ; then
    AC_MSG_ERROR(* AR is nott found!);
fi

AC_SUBST(AR)
AC_PROG_RANLIB

#--------------------------------------- header files
AC_HEADER_STDC
AC_HEADER_ASSERT
AC_HEADER_TIME
AC_CHECK_HEADERS([limits.h ctype.h])
AC_CHECK_HEADERS([stdint.h])

#--------------------------------------- Integer
AC_LANG(C)
AC_CHECK_SIZEOF([int])
AC_CHECK_SIZEOF([long])
AC_CHECK_SIZEOF([long long])

AC_SUBST(SCAPAR_USE_LONG_INT, "")
AC_ARG_ENABLE(big-int,
[  --enable-big-int        use long int for INT
  --disable-big-int       use int for INT (default),
  --with-int=type         integer type(long|long long)],, enable_big_int=no)
if test "$enable_big_int" = "yes"; then
    if test "$with_int" = "long long"; then
        AC_DEFINE(SCAPAR_USE_LONG_LONG, 1)
        AC_DEFINE(SCAPAR_USE_LONG, 0)
        AC_MSG_NOTICE([* use 'long long' for INT])
        AC_DEFINE(IFMT, ["lld"])
        AC_DEFINE(XFMT, ["lld"])
    else
        AC_DEFINE(SCAPAR_USE_LONG_LONG, 0)
        AC_DEFINE(SCAPAR_USE_LONG, 1)
        AC_MSG_NOTICE([* use 'long' for INT])
        AC_DEFINE(IFMT, ["ld"])
        AC_DEFINE(XFMT, ["ld"])
    fi
else
    AC_MSG_NOTICE(* use 'int' for 'INT')
    AC_DEFINE(SCAPAR_USE_LONG_LONG, 0)
    AC_DEFINE(SCAPAR_USE_LONG, 0)
    AC_DEFINE(IFMT, ["d"])
    AC_DEFINE(XFMT, ["ld"])
fi

#--------------------------------------- Floating point
AC_LANG(C)
AC_SUBST(SCAPAR_USE_LONG_DOUBLE, "0")
AC_TYPE_LONG_DOUBLE

AC_ARG_ENABLE(long-double,
[  --enable-long-double    use long double for FLOAT
  --disable-long-double   use double for FLOAT (default)],, enable_long_double=no)
if test "$enable_long_double" = "yes" -a "$ac_cv_type_long_double" = "yes"; then
    AC_CHECK_SIZEOF([long double])
    AC_DEFINE(SCAPAR_USE_LONG_DOUBLE, 1)

    AC_MSG_NOTICE([* use 'long double' for FLOAT])
    AC_DEFINE(FFMT, ["Lg"])
else
    AC_MSG_NOTICE(* use 'double' for 'FLOAT')
    AC_CHECK_SIZEOF([double])

    AC_DEFINE(SCAPAR_USE_LONG_DOUBLE, 0)
    AC_DEFINE(FFMT, ["g"])
fi

#--------------------------------------- header files
AC_HEADER_STDC
AC_HEADER_ASSERT
AC_HEADER_TIME
AC_CHECK_HEADERS([limits.h ctype.h])
AC_CHECK_HEADERS([sys/time.h sys/resource.h unistd.h])

#--------------------------------------- library functions.
AC_CHECK_FUNCS([gettimeofday getrusage])

#--------------------------------------- basic flags
# Note: -I`pwd`/include and -L`pwd`/src must be the first term in CPPFLAGS
# and LDFLAGS respectively, which will be changed to SCAPAR_INSTDIR/include by
# 'make install'
CPPFLAGS="-I${SCAPAR_DIR}/include $CPPFLAGS"
LDFLAGS="-L${SCAPAR_DIR}/src $LDFLAGS"

LIBS="-lscapar $LIBS"

if test -z "$LINKER"; then
    LINKER="$CC"
fi

AC_OUTPUT
